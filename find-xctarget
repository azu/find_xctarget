#!/bin/bash

export SCRIPT_DIR=$(dirname "$0")

##
## Configuration Variables
##

SCHEMES="$@"

config ()
{
    # The workspace to build.
    #
    # If not set and no workspace is found, the -workspace flag will not be passed
    # to `xctool`.
    #
    # Only one of `XCWORKSPACE` and `XCODEPROJ` needs to be set. The former will
    # take precedence.
    : ${XCWORKSPACE=$(find_pattern "*.xcworkspace")}

    # The project to build.
    #
    # If not set and no project is found, the -project flag will not be passed
    # to `xctool`.
    #
    # Only one of `XCWORKSPACE` and `XCODEPROJ` needs to be set. The former will
    # take precedence.
    : ${XCODEPROJ=$(find_pattern "*.xcodeproj")}


    # A whitespace-separated list of default schemes to build.
    #
    # Individual names can be quoted to avoid word splitting.
    : ${SCHEMES:=$(xcodebuild -list 2>/dev/null | awk -f "$SCRIPT_DIR/schemes.awk")}
    
    export XCWORKSPACE
    export XCODEPROJ
    export BOOTSTRAP
    export XCTOOL_OPTIONS
    export SCHEMES
}

main ()
{
    config

    if [ -n "$XCWORKSPACE" ]; then
        echo "xcodebuild -workspace $XCWORKSPACE -scheme $SCHEMES -sdk iphonesimulator ONLY_ACTIVE_ARCH=YES clean build test | xcpretty -c"
    elif [ -n "$XCODEPROJ"]; then
        echo "xcodebuild -project $xcpretty -scheme $SCHEMES -sdk iphonesimulator ONLY_ACTIVE_ARCH=YES clean build test | xcpretty -c"
    else
        echo "Not Fond Project file"
        exit 1
    fi
}



find_pattern ()
{
    ls -d $1 2>/dev/null | head -n 1
}

main
